openapi: 3.0.2
info:
  version: 1.0.0
  title: Foosball Ranking API
servers:
  - url: http://localhost:8000
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        lastname:
          type: string
          # email:
          #   type: string
          # email_verified_at:
          #   type: string
          # password: # we probably don't want to use this
          # type: string
        username:
          type: string
        # role_id:
        #   type: integer
        elo:
          type: number
          default: 1000
    Role:
      type: object
      properties:
        id:
          type: integer
        role_name:
          type: string
    FoosballTeam:
      type: object
      properties:
        id:
          type: integer
        team_name:
          type: string
        player1_id:
          type: integer
        player2_id:
          type: integer
        elo:
          type: number
          default: 1000
    FoosballTeamInput:
      type: object
      properties:
        team_name:
          type: string
        player2_id:
          type: integer
    FoosballGame:
      type: object
      properties:
        id:
          type: integer
        player1_id:
          type: integer
        player2_id:
          type: integer
        player1_score:
          type: integer
        player2_score:
          type: integer
    FoosballGameInput:
      type: object
      properties:
        player2_id:
          type: integer
        player1_score:
          type: integer
        player2_score:
          type: integer
        player1_side:
          type: integer
          minimum: 1
          maximum: 2
          default: 1
    FoosballGameInputAdmin:
      type: object
      properties:
        player1_id:
          type: integer
        player2_id:
          type: integer
        player1_score:
          type: integer
        player2_score:
          type: integer
    FoosballGame2v2:
      type: object
      properties:
        id:
          type: integer
        team1_id:
          type: integer
        team2_id:
          type: integer
        team1_score:
          type: integer
        team2_score:
          type: integer
    FoosballGame2v2Input:
      type: object
      properties:
        team1_id:
          type: integer
        team2_id:
          type: integer
        team1_score:
          type: integer
        team2_score:
          type: integer
        team1_side:
          type: integer
          minimum: 1
          maximum: 2
          default: 1
    FoosballGame2v2InputAdmin:
      type: object
      properties:
        team1_id:
          type: integer
        team2_id:
          type: integer
        team1_score:
          type: integer
        team2_score:
          type: integer
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
    name:
      name: name
      in: query
      required: true
      schema:
        type: string
  responses:
    BadRequest:
      description: Request was malformed, see body for error details
      content:
        application/json:
          schema:
            type: object
            properties:
              error-message:
                type: string
                description: Error message detailing the problem with the request
    NotFound:
      description: Not found
    NoContent:
      description: 'No content: query resolved to nothing'
    ServerError:
      description: Server error
paths:
  /FoosballGames1v1/self:
    get:
      summary: gets the last 10 matches played by the user
      tags:
        - FoosballGames
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballGame'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /FoosballGames1v1:
    get:
      summary: gets the last 10 matches played globally
      tags:
        - FoosballGames
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballGame'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
    post:
      summary: makes a new 1v1 game
      tags:
        - FoosballGames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoosballGameInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballGame'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /FoosballGames1v1/{id}:
    put:
      summary: edits an existing 1v1 game (only your own)
      tags:
        - FoosballGames
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoosballGameInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballGame'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
    delete:
      summary: deletes an existing game (only your own except for admin)
      tags:
        - FoosballGames
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: game successfully deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /FoosballGames2v2/self:
    get:
      summary: gets last 10 2v2 matches played by the user
      tags:
        - FoosballGames2v2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballGame2v2'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /FoosballGames2v2:
    get:
      summary: gets last 10 played 2v2 matches globally
      tags:
        - FoosballGames2v2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballGame2v2'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
    post:
      summary: gets last 10 played 2v2 matches
      tags:
        - FoosballGames2v2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoosballGame2v2Input'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballGame2v2'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /FoosballGames2v2/{id}:
    put:
      summary: edits an existing 2v2 game (only your own)
      tags:
        - FoosballGames2v2
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoosballGame2v2Input'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballGame2v2'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
    delete:
      summary: deletes an existing 2v2 game (only your own except for admin)
      tags:
        - FoosballGames2v2
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: game successfully deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /User/top10:
    get:
      summary: gets the top 10 users
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /User/summary:
    get:
      summary: gets the username, position and elo of the player
      tags:
        - Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  position:
                    type: integer
                    default: 69
                  elo:
                    type: number
                    default: 1000
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /FoosballTeam/top10:
    get:
      summary: gets the top 10 teams
      tags:
        - FoosballTeams
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballTeam'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /FoosballTeam:
    get:
      summary: gets the teams of the user
      tags:
        - FoosballTeams
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballTeam'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
    post:
      summary: creates a new team
      tags:
        - FoosballTeams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoosballTeamInput'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballTeam'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /FoosballTeam/{id}:
    put:
      summary: edit an existing team
      tags:
        - FoosballTeams
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                team_name:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballTeam'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
    delete:
      summary: delete an existing team
      tags:
        - FoosballTeams
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: team successfully deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /Admin/FoosballGames1v1/{id}:
    put:
      summary: edit any 1v1 game (admin only)
      tags:
        - Admin
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoosballGameInputAdmin'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballTeam'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /Admin/FoosballGames2v2/{id}:
    put:
      summary: edit any 2v2 game (admin only)
      tags:
        - Admin
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoosballGame2v2InputAdmin'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoosballTeam'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'
  /Admin/User/{id}:
    delete:
      summary: deletes a player (not other admins)
      tags:
        - Admin
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: player successfully deleted
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        5XX:
          $ref: '#/components/responses/ServerError'